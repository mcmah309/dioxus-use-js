function greeting(from,to){return`Hello ${to}, this is ${from} speaking from JavaScript!`}async function sleep(ms){return new Promise((resolve)=>setTimeout(resolve,ms))}function createJsObject(){return{name:"example",method:function(value){return value+25}}}function useJsObject(input,value){return value.method(input)}async function createJsObjectPromise(){return Promise.resolve(createJsObject())}async function createJsObjectPromiseNullable(){return Promise.resolve(null)}function useJsObjectNullable(input,value){return value?.method(input)??null}async function useCallback1(startingValue,callback){let doubledValue=startingValue*2,quadrupledValue=await callback(doubledValue);if(quadrupledValue!=doubledValue*2)throw new Error("Callback example 1 did not double value");return quadrupledValue*2}async function useCallback2(callback){let value=await callback();if(value!=30)throw new Error("Callback example 2 did not send value of 30");return value*2}async function useCallback3(startingValue,callback){if(await callback(startingValue+8)!=null)throw new Error("Callback example 3 did not send back correct value for void");return startingValue+4}async function useCallback4(startingValue,callback){if(await callback()!=null)throw new Error("Callback example 4 did not send back correct value for void");return startingValue+10}async function untyped(input){return null}function json(input){return[input]}export{useJsObjectNullable,useJsObject,useCallback4,useCallback3,useCallback2,useCallback1,untyped,sleep,json,greeting,createJsObjectPromiseNullable,createJsObjectPromise,createJsObject};
